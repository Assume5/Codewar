/*
Create a function that transforms any positive number to a string representing the number in words. The function should work for all numbers between 0 and 999999.

Examples
number2words(0)  ==>  "zero"
number2words(1)  ==>  "one"
number2words(9)  ==>  "nine"
number2words(10)  ==>  "ten"
number2words(17)  ==>  "seventeen"
number2words(20)  ==>  "twenty"
number2words(21)  ==>  "twenty-one"
number2words(45)  ==>  "forty-five"
number2words(80)  ==>  "eighty"
number2words(99)  ==>  "ninety-nine"
number2words(100)  ==>  "one hundred"
number2words(301)  ==>  "three hundred one"
number2words(799)  ==>  "seven hundred ninety-nine"
number2words(800)  ==>  "eight hundred"
number2words(950)  ==>  "nine hundred fifty"
number2words(1000)  ==>  "one thousand"
number2words(1002)  ==>  "one thousand two"
number2words(3051)  ==>  "three thousand fifty-one"
number2words(7200)  ==>  "seven thousand two hundred"
number2words(7219)  ==>  "seven thousand two hundred nineteen"
number2words(8330)  ==>  "eight thousand three hundred thirty"
number2words(99999)  ==>  "ninety-nine thousand nine hundred ninety-nine"
number2words(888888)  ==>  "eight hundred eighty-eight thousand eight hundred eighty-eight"
*/
//code
function number2words(n){
    //console.log(n.toString().length)
    console.log(n)
    const ones = ['zero', 'one', 'two', 'three', 'four','five', 'six', 'seven', 'eight', 'nine',
    'ten', 'eleven', 'twelve', 'thirteen', 'fourteen',
    'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
    const tensones = [' ',' ','twenty','thirty','forty','fifty', 'sixty','seventy','eighty','ninety'];
    const hund=['hundred',"thousand"];
    const length=n.toString().length;
    const nStr=n.toString()
    if(length===1 || length===2 && n<20){ //one test
        return(ones[n])
    }
    else if(length===2){//tens test
        if(nStr[1]==='0'){
        return(tensones[nStr[0]])
        }
        else{
            return(tensones[nStr[0]]+"-"+ones[nStr[1]])
        }
    }
    else if(length===3 ){//hundreds test
        if(nStr[1]==='0' && nStr[2]==='0'){
        return(ones[nStr[0]]+" "+ hund[0])
    }
        else if(nStr[1]==='0'){
            return(ones[nStr[0]]+ " "+ hund[0]+ " "+ones[nStr[2]])
        }
        else if(nStr[2]==='0'){
            return(ones[nStr[0]]+ " "+ hund[0]+" "+tensones[nStr[1]])
        }
        else{
            return(ones[nStr[0]]+ " "+ hund[0]+" "+tensones[nStr[1]]+"-"+ones[nStr[2]])
        }
    }
    else if(length===4){// thousands test
        //5988
        if(nStr[1]==='0'&& nStr[2]==='0'&&nStr[3]==='0'){
            return (ones[nStr[0]]+" "+ hund[1]);
        }
        else if(nStr[1]==='0'&& nStr[2]==='0'){
            return (ones[nStr[0]]+" "+ hund[1]+" "+ones[nStr[3]]);
        }
        else if(nStr[1]==='0'){
            return (ones[nStr[0]]+" "+ hund[1]+" "+tensones[nStr[2]]+"-"+ ones[nStr[3]]);
    }
        else if(nStr[2]==='0'&& nStr[3]==='0'){
            return(ones[nStr[0]]+" "+ hund[1]+" "+ones[nStr[1]]+" "+ hund[0])
        }
        else if(nStr[3]==='0'){
            return(ones[nStr[0]]+" "+ hund[1]+" "+ones[nStr[1]]+" "+ hund[0]+" "+tensones[nStr[2]])
        }
        else{
        const temp=nStr[2]+nStr[3]
        return(ones[nStr[0]]+" "+ hund[1]+" "+ones[nStr[1]]+" "+ hund[0]+" "+ones[temp])        }
}    
    else if(length ===5){//Ten thousands test
        const temp=parseInt(nStr[3]+nStr[4])
        //19907
        let str=(tensones[nStr[0]]+"-"+ones[nStr[1]]+" "+hund[1]+" "+ones[nStr[2]]+" "+hund[0]+" "+tensones[nStr[3]]+'-'+ones[nStr[4]])
        if(nStr[0]+nStr[1]>=10&&nStr[0]+nStr[1]<20){
            let str=(ones[nStr[0]+nStr[1]]+" "+hund[1]+" "+ones[nStr[2]]+" "+hund[0]+" "+tensones[nStr[3]]+'-'+ones[nStr[4]])
            str=str.replace(/-zero/g,"")
            str=str.replace(/-zero hundred/g,"")
            str=str.replace(/-zero thousand/g,"")
            str=str.replace(/zero hundred /g,"")
            str=str.replace(/zero thousand /g,"")
            str=str.replace(/zero/g,"")
            str=str.replace(/ -/g,"")
            str=str.replace(/  /g,"")            
            return str;
        }
        
        else if(temp<20&&temp>=10){
            let str=(tensones[nStr[0]]+'-'+ones[nStr[1]]+" "+hund[1]+" "+ones[nStr[2]]+" "+hund[0]+" "+ones[nStr[3]+nStr[4]])
            str=str.replace(/-zero/g,"")
            str=str.replace(/-zero hundred/g,"")
            str=str.replace(/-zero thousand/g,"")
            str=str.replace(/zero hundred /g,"")
            str=str.replace(/zero thousand /g,"")
            str=str.replace(/zero/g,"")
            str=str.replace(/ -/g,"")
            str=str.replace(/  /g,"")          
            return str;
        }
        str=str.replace(/-zero/g,"")
        str=str.replace(/-zero hundred/g,"")
        str=str.replace(/-zero thousand/g,"")
        str=str.replace(/zero hundred /g,"")
        str=str.replace(/zero thousand /g,"")
        str=str.replace(/zero/g,"")
        str=str.replace(/ -/g,"")
        str=str.replace(/  /g,"")
        return str
    }
    else{

        if(nStr[1]+nStr[2]<20 && nStr[1]+nStr[2]>=10){
            let str=(ones[nStr[0]]+" "+hund[0]+" "+ ones[nStr[1]+nStr[2]]+" "+hund[1]+" "+ones[nStr[3]]+" "+hund[0]+" "+tensones[nStr[4]]+'-'+ones[nStr[5]])      
            str=str.replace(/-zero/g,"")
            str=str.replace(/-zero hundred/g,"")
            str=str.replace(/-zero thousand/g,"")
            str=str.replace(/zero hundred /g,"")
            str=str.replace(/zero thousand /g,"")
            str=str.replace(/zero /g,"")
            str=str.replace(/zero-/g,"")
            str=str.replace(/ -/g,"")  
            str=str.replace(/  /g,"")
            return str;
        }
        else if(nStr[4]+nStr[5]<20&&nStr[4]+nStr[5]>=10){
            let str=(ones[nStr[0]]+" "+hund[0]+" "+ tensones[nStr[1]]+"-"+ones[nStr[2]]+" "+hund[1]+" "+ones[nStr[3]]+" "+hund[0]+" "+ones[nStr[4]+nStr[5]])
            str=str.replace(/-zero/g,"")
            str=str.replace(/-zero hundred/g,"")
            str=str.replace(/-zero thousand/g,"")
            str=str.replace(/zero hundred /g,"")
            str=str.replace(/zero thousand /g,"")
            str=str.replace(/zero /g,"")
            str=str.replace(/zero-/g,"")
            str=str.replace(/ -/g,"")  
            return str;
        }
        let str=(ones[nStr[0]]+" "+hund[0]+" "+ tensones[nStr[1]]+"-"+ones[nStr[2]]+" "+hund[1]+" "+ones[nStr[3]]+" "+hund[0]+" "+tensones[nStr[4]]+'-'+ones[nStr[5]])
        str=str.replace(/-zero/g,"")
        str=str.replace(/-zero hundred/g,"")
        str=str.replace(/-zero thousand/g,"")
        str=str.replace(/zero hundred /g,"")
        str=str.replace(/zero thousand /g,"")
        str=str.replace(/zero/g,"")
        str=str.replace(/zero-/g,"")
        str=str.replace(/ -/g,"")
        str=str.replace(/  /g,"")

        return (str)
    }
}
